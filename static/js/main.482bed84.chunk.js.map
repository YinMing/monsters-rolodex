{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handleChange","App","componentDidMount","fetch","then","res","json","setState","e","searchField","target","value","state","this","filterMonsters","filter","m","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAAe,I,kBCGFA,EAAO,SAACC,GAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLjBC,EAAW,SAACR,GAErB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAMA,QAASA,GAAcA,EAAQC,UCR5CO,G,MAAY,SAACX,GAEtB,OACI,uBAAOY,KAAK,SAASC,YAAab,EAAMa,YAAaC,SAAUd,EAAMe,aAAcd,UAAU,aC4CtFe,G,wDAxCb,aAAe,IAAD,8BACZ,gBAQFC,kBAAoB,WAClBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACjEF,MAAK,SAAAV,GAAc,EAAKa,SAAS,CAAEb,iBAX1B,EAcdM,aAAe,SAACQ,GACd,EAAKD,SAAS,CAAEE,YAAaD,EAAEE,OAAOC,SAZtC,EAAKC,MAAQ,CACXlB,SAAU,GACVe,YAAa,IALH,E,0CAmBd,WAAU,IAAD,EAC2BI,KAAKD,MAA/BlB,EADD,EACCA,SAAUe,EADX,EACWA,YACZK,EAAiBpB,EAASqB,QAAO,SAAAC,GAAC,OAAIA,EAAEzB,KAAK0B,cAAcC,SAAST,EAAYQ,kBAEtF,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBE,aAAca,KAAKb,eAE5D,cAAC,EAAD,CAAUN,SAAUoB,W,GA9BVK,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.482bed84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => {\r\n\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./card-list.style.css\";\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n\r\n    return (\r\n        <div className=\"card-list\">\r\n            {\r\n                props.monsters.map(monster => (\r\n                    <Card monster={monster} key={monster.id} />\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport \"./search-box.css\"\r\nexport const SearchBox = (props) => {\r\n\r\n    return (\r\n        <input type=\"search\" placeholder={props.placeholder} onChange={props.handleChange} className=\"search\" />\r\n    );\r\n}\r\n\r\n","import logo from './logo.svg';\nimport React, { Component } from 'react'\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount = () => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json())\n      .then(monsters => { this.setState({ monsters }) });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  \n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter(m => m.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={this.handleChange}/>\n        {/* <input type=\"search\" placeholder=\"search monsters\" onChange={e => this.setState({ searchField: e.target.value })} /> */}\n        <CardList monsters={filterMonsters}>\n          \n        </CardList>\n        \n      </div>\n\n    )\n\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}